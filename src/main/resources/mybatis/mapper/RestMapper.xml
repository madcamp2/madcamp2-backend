<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.everytask.model.dao.RestMapper">

    <select id="getAllUserList" resultType="com.example.everytask.model.dto.UserObject">
        SELECT * FROM user;
    </select>

    <select id="getSingleUser" resultType="com.example.everytask.model.dto.UserObject">
        SELECT * FROM user WHERE id = #{userId};
    </select>

    <select id="findByEmail" resultType="com.example.everytask.model.dto.UserObject">
        SELECT * FROM user WHERE email = #{email} LIMIT 1;
    </select>

    <insert id="userSignUp" parameterType="com.example.everytask.model.dto.UserSignUpForm">
        INSERT INTO user(name, auth_type, email, password) VALUES (#{item.name}, #{item.auth_type}, #{item.email}, #{item.password});
    </insert>

    <insert id="addUser" parameterType="com.example.everytask.model.dto.UserObject">
        INSERT INTO user(name, auth_type, email, password) VALUES (#{user.name}, #{user.auth_type}, #{user.email}, #{user.password});
    </insert>

    <select id="isThereRefreshToken" resultType="com.example.everytask.model.dto.RefreshTokenMapping">
        SELECT * FROM token WHERE refresh_token = #{refreshToken};
    </select>

    <select id="getIdFromUserEmail"  resultType="int">
        SELECT id FROM user WHERE email = #{email} LIMIT 1;
    </select>

    <select id="getNameFromUserID"  resultType="String">
        SELECT name FROM user WHERE id = #{id} LIMIT 1;
    </select>

    <select id="getNameFromOrgID"  resultType="String">
        SELECT name FROM organization WHERE id = #{id} LIMIT 1;
    </select>

    <select id="getOrgsFromUserId"  resultType="com.example.everytask.model.dto.Organization">
        SELECT * FROM organization as A inner join belongs as B ON A.id=B.organization_id and B.user_id=#{id};
    </select>

    <select id="getFollowersFromUserId" resultType="com.example.everytask.model.dto.SimpleUserObject">
        SELECT id, name, email FROM user as A inner join follows as B ON A.id=B.from_id and B.to_id=#{id};
    </select>

    <select id="getFollowsFromUserId" resultType="com.example.everytask.model.dto.SimpleUserObject">
        "SELECT id, name, email FROM user as A inner join follows as B ON A.id=B.to_id and B.from_id=#{id};"
    </select>

    <select id="getCourseListFromKeyword" resultType="com.example.everytask.model.dto.CourseObject">
        SELECT * FROM course where course_name like CONCAT('%',#{keyword},'%') OR course_code like CONCAT('%',#{keyword},'%');
    </select>
</mapper>

<!--Mybatis 에서 Mapper Interface 제공-->
<!--DAO 대신 제공되는 Mapper Interface를 사용하며, 해당 파일은 mybatis를 이용해 분리한 sql문들을 저장하는 파일이다.-->
<!--쿼리가 필요한 경우 질의문을 관리하는 Mapper파일(해당 파일)로 요청이 온다.-->